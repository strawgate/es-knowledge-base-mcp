[project]
name = "es-knowledge-base-mcp"
version = "0.1.0"
description = "An MCP server for crawling documentation, writing it to Elasticsearch for vector search retrieval by an LLM."
authors = [
    {name = "Bill Easton",email = "williamseaston@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12,<3.13"
dependencies = [
    "elasticsearch (>=8.17.2,<9.0.0)",
    "pyyaml>=6.0.2,<7.0.0",
    "anyio (>=4.9.0,<5.0.0)",
    "fastmcp>=2.1.2",
    "aiohttp>=3.11.14",
    "pydantic-settings>=2.3.4,<3.0.0",
    "aiodocker>=0.24.0",
    "pydantic>=2.0.0,<3.0.0",
    "asyncio (>=3.4.3,<4.0.0)",
    "requests>=2.32.3,<3.0.0",
    "beautifulsoup4>=4.12.3,<5.0.0",
    "async-lru (>=2.0.5,<3.0.0)",
    "markdownify (>=1.1.0,<2.0.0)",
    "docling",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0","pip"]
build-backend = "poetry.core.masonry.api" 

[project.scripts]
es-knowledge-base-mcp = "es_knowledge_base_mcp.server:run"

[project.optional-dependencies]
dev = [
    "ruff>=0.11",
    "pytest>=8.3,<9.0.0",
    "pytest-asyncio>=0.26,<0.27.0",
    "syrupy>=4.9",
    "requests-mock>=1.12,<2.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.poetry]
packages = [
    { include = "es_knowledge_base_mcp", from = "src" },
]

[tool.ruff]
line-length = 140
target-version = "py312"
respect-gitignore = true
extend-exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "venv",
    "__pycache__",
    "**/__pycache__/**",
    "build",
    "dist",
    "reference"
]


[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D203", # incorrect-blank-line-before-class
    "D213",  # multi-line-summary-second-line
    "D413",  # missing-blank-line-after-last-section
    "COM812", # dunno
    "FBT001", # bool params
    "FBT002", # bool params
    "PLR6301", # unused Self
    "B008", # Function call in params
    "CPY001", # No copyright header
    "TRY003", # long strings outside exceptions class
    "PGH003", # Require specific exclusions
]

fixable = ["ALL"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["es_knowledge_base_mcp"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
