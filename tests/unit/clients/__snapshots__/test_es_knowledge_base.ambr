# serializer version: 1
# name: test_build_metadata_mapping[full_fields]
  dict({
    'knowledge_base': dict({
      'data_source': 'http://example.com/kb1',
      'description': 'Description for KB 1',
      'name': 'Test KB 1',
      'type': 'web',
    }),
  })
# ---
# name: test_build_metadata_mapping[missing_description]
  dict({
    'knowledge_base': dict({
      'data_source': 'file:///path/to/kb2',
      'description': '',
      'name': 'Test KB 2',
      'type': 'file',
    }),
  })
# ---
# name: test_hit_to_document[empty_highlight]
  dict({
    'content': list([
      'Content with empty highlight.',
    ]),
    'knowledge_base_name': 'Test KB',
    'score': 0.6,
    'title': 'Doc Title 4',
    'url': 'http://example.com/doc4',
  })
# ---
# name: test_hit_to_document[full_hit]
  dict({
    'content': list([
      'This is the <em>highlighted</em> content.',
    ]),
    'knowledge_base_name': 'Test KB',
    'score': 1.5,
    'title': 'Doc Title 1',
    'url': 'http://example.com/doc1',
  })
# ---
# name: test_hit_to_document[missing_source_fields]
  dict({
    'content': list([
      'Highlighted content only.',
    ]),
    'knowledge_base_name': 'Test KB',
    'score': 0.5,
    'title': '',
    'url': 'http://example.com/doc3',
  })
# ---
# name: test_hit_to_document[source_only]
  dict({
    'content': list([
      'Another full body content.',
    ]),
    'knowledge_base_name': 'Test KB',
    'score': 0.8,
    'title': 'Doc Title 2',
    'url': 'http://example.com/doc2',
  })
# ---
# name: test_hit_to_document[string_score]
  dict({
    'content': list([
      'Highlighted content.',
    ]),
    'knowledge_base_name': 'Test KB',
    'score': 1.2,
    'title': 'Doc Title 5',
    'url': 'http://example.com/doc5',
  })
# ---
# name: test_phrase_to_query[basic]
  dict({
    '_source': list([
      'title',
      'url',
      'body',
    ]),
    'highlight': dict({
      'fields': dict({
        'body': dict({
        }),
      }),
      'fragment_size': 500,
      'number_of_fragments': 5,
    }),
    'query': dict({
      'bool': dict({
        'should': list([
          dict({
            'match': dict({
              'headings': dict({
                'boost': 1,
                'query': 'search query',
              }),
            }),
          }),
          dict({
            'semantic': dict({
              'boost': 2,
              'field': 'body',
              'query': 'search query',
            }),
          }),
        ]),
      }),
    }),
    'size': 5,
    'sort': list([
      dict({
        '_score': dict({
          'order': 'desc',
        }),
      }),
    ]),
  })
# ---
# name: test_phrase_to_query[custom_size_fragments]
  dict({
    '_source': list([
      'title',
      'url',
      'body',
    ]),
    'highlight': dict({
      'fields': dict({
        'body': dict({
        }),
      }),
      'fragment_size': 500,
      'number_of_fragments': 3,
    }),
    'query': dict({
      'bool': dict({
        'should': list([
          dict({
            'match': dict({
              'headings': dict({
                'boost': 1,
                'query': 'another phrase',
              }),
            }),
          }),
          dict({
            'semantic': dict({
              'boost': 2,
              'field': 'body',
              'query': 'another phrase',
            }),
          }),
        ]),
      }),
    }),
    'size': 10,
    'sort': list([
      dict({
        '_score': dict({
          'order': 'desc',
        }),
      }),
    ]),
  })
# ---
# name: test_phrase_to_query[empty_phrase]
  dict({
    '_source': list([
      'title',
      'url',
      'body',
    ]),
    'highlight': dict({
      'fields': dict({
        'body': dict({
        }),
      }),
      'fragment_size': 500,
      'number_of_fragments': 5,
    }),
    'query': dict({
      'bool': dict({
        'should': list([
          dict({
            'match': dict({
              'headings': dict({
                'boost': 1,
                'query': '',
              }),
            }),
          }),
          dict({
            'semantic': dict({
              'boost': 2,
              'field': 'body',
              'query': '',
            }),
          }),
        ]),
      }),
    }),
    'size': 5,
    'sort': list([
      dict({
        '_score': dict({
          'order': 'desc',
        }),
      }),
    ]),
  })
# ---
# name: test_phrase_to_query[special_chars]
  dict({
    '_source': list([
      'title',
      'url',
      'body',
    ]),
    'highlight': dict({
      'fields': dict({
        'body': dict({
        }),
      }),
      'fragment_size': 500,
      'number_of_fragments': 5,
    }),
    'query': dict({
      'bool': dict({
        'should': list([
          dict({
            'match': dict({
              'headings': dict({
                'boost': 1,
                'query': 'phrase with special characters !@#$',
              }),
            }),
          }),
          dict({
            'semantic': dict({
              'boost': 2,
              'field': 'body',
              'query': 'phrase with special characters !@#$',
            }),
          }),
        ]),
      }),
    }),
    'size': 5,
    'sort': list([
      dict({
        '_score': dict({
          'order': 'desc',
        }),
      }),
    ]),
  })
# ---
